apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-cloud-kubernetes
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spring-cloud-kubernetes
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["configmaps", "pods", "services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spring-cloud-kubernetes
  namespace: default
subjects:
  - kind: ServiceAccount
    name: spring-cloud-kubernetes
    namespace: default
roleRef:
  kind: ClusterRole
  name: spring-cloud-kubernetes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounting
  labels:
    app: accounting
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accounting
  template:
    metadata:
      labels:
        app: accounting
    spec:
      serviceAccountName: spring-cloud-kubernetes
      initContainers:
      - name: create-keystore
        image: alpine:3.18
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Installing openssl..." &&
          apk add openssl &&
          echo "Checking certificate files..." &&
          ls -l /etc/tls &&
          echo "tls.crt contents:" &&
          cat /etc/tls/tls.crt || { echo "Failed to read tls.crt"; exit 1; } &&
          echo "tls.key contents:" &&
          cat /etc/tls/tls.key || { echo "Failed to read tls.key"; exit 1; } &&
          echo "Creating PKCS12 keystore..." &&
          openssl pkcs12 -export -in /etc/tls/tls.crt -inkey /etc/tls/tls.key -out /keystore/keystore.p12 -name accounting -passout pass: || {
            echo "Failed to create keystore. Exit code: $?";
            exit 1;
          } &&
          echo "Keystore created successfully at /keystore/keystore.p12."
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/tls
        - name: keystore-volume
          mountPath: /keystore
      volumes:
      - name: tls-certs
        secret:
          secretName: letsencrypt-prod
      - name: keystore-volume
        emptyDir: {}
      containers:
      - name: accounting
        image: samburi/accounting:1.0.3
        imagePullPolicy: Always
        ports:
        - name: https
          containerPort: 9014
        # readinessProbe:
        #   httpGet:
        #     path: /actuator/health
        #     port: 9014
        #     scheme: HTTPS
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        #   failureThreshold: 3
        env:
        - name: ISSUER_URL
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: issuer-url
              optional: false
        - name: GATEWAY_URL
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: gateway-url
              optional: false
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: dbhost
              optional: false
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: username
              optional: false
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: password
              optional: false
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: db-port
              optional: false
        - name: KAFKA_URL
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: kafka-url
              optional: false
        - name: SPRING_CLOUD_BOOTSTRAP_ENABLED
          value: "true"
        - name: SPRING_CLOUD_KUBERNETES_SECRETS_ENABLEAPI
          value: "true"
        - name: SPRING_CLOUD_KUBERNETES_DISCOVERY_PRIMARY_PORT_NAME
          value: "https"
        - name: SERVER_SSL_ENABLED
          value: "true"
        - name: SERVER_SSL_KEY_STORE_TYPE
          value: "PKCS12"
        - name: SERVER_SSL_KEY_STORE
          value: "/keystore/keystore.p12"
        - name: SERVER_SSL_KEY_STORE_PASSWORD
          value: ""
        - name: SERVER_SSL_KEY_ALIAS
          value: "accounting"
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/tls
        - name: keystore-volume
          mountPath: /keystore
---
apiVersion: v1
kind: Service
metadata:
  name: accounting
  labels:
    app: accounting
spec:
  ports:
  - name: http
    port: 80
    targetPort: 9014
  - name: https
    port: 443
    targetPort: 9014
  selector:
    app: accounting
  type: ClusterIP