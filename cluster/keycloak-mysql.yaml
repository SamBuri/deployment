apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: keycloak
  # type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      # serviceAccountName:  easyvalues-kube-sa
      containers:
      - name: keycloak
        image: samburi/keycloak
        env:
        - name: KEYCLOAK_USER
          value: Saburi
        - name: KEYCLOAK_PASSWORD
          value: Bigsize4.
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: DB_VENDOR
          value: MYSQL
        - name: DB_ADDR
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: dbhost
              optional: false
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: db-port
              optional: false
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: username
              optional: false
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: saburi-secret
              key: password
              optional: false
        - name: DB_DATABASE
          value: keycloak





      # - name: cloud-sql-proxy
      #   image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
      #   command:
      #     - "/cloud_sql_proxy"
      #     - "-log_debug_stdout"
      #     - "-instances=easyvalues=tcp:3306"
      #   securityContext: 
      #     runAsNonRoot: true 
        # resources:
        #   requests:
        #     memory: "2Gi"
        #     cpu:  "1"
        ports:
        # - name: http
         - containerPort: 8080
        # - name: https
        #   containerPort: 8443
        # readinessProbe:
        #   httpGet:
        #     path: /auth/realms/master
        #     port: 80

# kind load docker-image jboss/keycloak
# kubectl apply -f keycloak-mysql.yaml
# kubectl apply -f InUse/keycloak-mysql.yaml
# kubectl delete -f deployments/keycloak-mysql.yaml
# kubectl apply -f keycloak-mysql.yaml
# kubectl port-forward deployment/keycloak 8080:8080
# 10.62.16.3